#! /bin/sh
config_host_mak="config-host.mak"

kern_ver=`uname -r`
objdir=$(pwd)/out
enable_lkm=NO
enable_libbpf=NO
static_link=no
enable_all=no
default_target=yes

usage() {
	echo "Usage: configure [options]"
	echo "options:"
	echo "  --kernel=KERNEL_VERSION    kernel version"
	echo "  --buiddir=OBJDIR           the build dir"
	echo "  --enable-lkm               enable linux kernel module"
	echo "  --enable-libbpf            enable libbpf"
	echo "  --enable-static            static link for c/cpp tools"
	echo "  --enable-target-xxx        xxx is the actual tool, like memleak, you may use --show-target to list all"
	echo "  --enable-target-all        enable all compoents"
	echo "  --disable-default          disable default compoents to built-in"
	echo "  --show-target              list all support tools"
}

for opt; do
	optarg=$(expr "x$opt" : 'x[^=]*=\(.*\)')
	case "$opt" in
		--kernel=*)
			kern_ver=$optarg
			;;
		--buiddir=*)
			objdir=$(readlink -f $optarg)
			;;
		--enable-lkm)
			enable_lkm="YES"
			;;
		--enable-libbpf)
			enable_libbpf="YES"
			;;
		--enable-static)
			static_link="yes"
			;;
		--enable-target-*)
			target=$(expr "$opt" : '--enable-target-\(.*\)')
			if [ $target = "all" ]; then
				enable_all="yes"
				enable_lkm="YES"
				enable_libbpf="YES"
			else
				target_list="$target $target_list"
			fi
			;;
		--disable-default)
			default_target=no
			;;
		--show-target)
			grep -nrw "target :=" $(pwd)/source/tools/ | awk '{print $3}' | grep -v test
			exit
			;;
		*)
			usage
			exit
			;;
	esac
done

echo "# Automatically generated by configure - do not modify" > $config_host_mak

echo "KERNEL_VERSION = $kern_ver" >> $config_host_mak
echo "OBJPATH = $objdir" >> $config_host_mak
echo "BUILD_KERNEL_MODULE = $enable_lkm" >> $config_host_mak
echo "BUILD_LIBBPF = $enable_libbpf" >> $config_host_mak

if [ $static_link = "yes" ]; then
echo "EXTRA_LDFLAGS = --static" >> $config_host_mak
fi

if [ $default_target = "yes" ]; then
target_list="cpu_irq load_tasks sys_monitor $target_list"
for i in $target_list;do
	target_files="$(grep -nrw "target := $i" $(pwd)/source/tools/ | awk -F ":" '{print $1}') $target_files"
done
fi

if [ $enable_all = "yes" ]; then
target_files=$(grep -nrw "target :=" $(pwd)/source/tools/ | awk -F ":" '{print $1}')
fi

for file in $target_files;do
target_paths="$(dirname $file) $target_paths"
done

echo "TARGET_LIST = $target_paths" >> $config_host_mak


