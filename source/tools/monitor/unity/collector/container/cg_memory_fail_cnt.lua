---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by liaozhaoyan.
--- DateTime: 2023/3/8 2:32 PM
---

require("common.class")
local pystring = require("common.pystring")
local CvProc = require("collector.vproc")
local root = "sys/fs/cgroup/memory/"
local child = "system.slice/"	--pass to me
local dfile = "memory.failcnt"

local CgMemFailCnt = class("cg_memFail_cnt", CvProc)

--ls{}, (pod_name and docker_name
function CgMemFailCnt:_init_(proto, pffi, mnt, pFile, lsex)
    CvProc._init_(self, proto, pffi, mnt, pFile or root..child..dfile)
	self.ls = lsex
end

function CgMemFailCnt:proc(elapsed, lines)
	-- if pFile not valid ,return -1
    local c = 0
    CvProc.proc(self)
    local values = {}
    local ls = {
		name = "cg",
		index = child,
	}
    for line in io.lines(self.pFile) do
        local cell = pystring:split(line)
        values[c] = {
            name = "fail_cnt",
            value = tonumber(cell[1])
        }
        c = c + 1
    end
    self:appendLine(self:_packProto("memFail_cnt", {ls}, values))
    self:push(lines)
end

return CgMemFailCnt
