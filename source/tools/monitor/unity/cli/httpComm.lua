---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by liaozhaoyan.
--- DateTime: 2022/12/19 10:46 PM
---

require("class")
local pystring = require("pystring")

local ChttpComm = class("httpComm")

function ChttpComm:_init_()
    local json = require("cjson")
    self._json = json.new()
end

function ChttpComm:jencode(t)
    return self._json.encode(t)
end

function ChttpComm:jdecode(s)
    return self._json.decode(s)
end

function ChttpComm:urlEncode(s)
    local res = string.gsub(s, "([^%w%.%- ])", function(c) return string.format("%%%02X", string.byte(c)) end)
    return string.gsub(res, " ", "+")
end

function ChttpComm:urlDecode(s)
    return string.gsub(s, '%%(%x%x)', function(h) return string.char(tonumber(h, 16)) end)
end

function ChttpComm:urlQueryParse(s)
    local res = {}
    local args = pystring:split(s, "&")
    for _, arg in pairs(args) do
        local kv = pystring:split(arg, '=')
        local k = kv[1]
        local v = self:urlDecode(kv[2])
        res[k] = v
    end
    return res
end

function ChttpComm:getHeaders()
    return {
        connection = "close",
        server = "beaver/0.0.1",
        date = os.date("%a, %d %b %Y %H:%M:%S %Z", os.time()),
    }
end

function ChttpComm:packHeaders(headTable, len) -- just for http out.
    local lines = {}
    if not headTable["Content-Length"] then
        headTable["Content-Length"] = len
    end

    for k, v in pairs(headTable) do
        table.insert(lines, k .. ": " .. v)
    end
    return pystring:join("\r\n", lines)
end

return ChttpComm
