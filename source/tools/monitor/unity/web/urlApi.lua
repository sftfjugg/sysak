---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by liaozhaoyan.
--- DateTime: 2022/12/20 1:06 AM
---

package.path = package.path .. ";../common/?.lua;"
package.path = package.path .. ";../cli/?.lua;"

require("class")
local pystring = require("pystring")
local ChttpComm = require("httpComm")

local CurlApi = class("urlApi", ChttpComm)

function CurlApi:_init_(frame)
    ChttpComm._init_(self)
    self._frame = frame
    self._urlCb = {
        ["/api/sum"] = function(conn, tParam) self:sum(conn, tParam)  end,
        ["/api/sub"] = function(conn, tParam) self:sub(conn, tParam)  end,
    }
end

function CurlApi:sum(conn, tParam)
    local params = self:jdecode(tParam.body)
    local res = {sum=params.num1 + params.num2}
    local s = self:jencode(res)
    local heads = {["Content-Type"] = "application/json"}
    local headStr = self:packHeaders(heads, #s)
    http_out(conn, 200, headStr, s.."\n")
end

function CurlApi:sub(conn, tParam)
    local params = self:jdecode(tParam.body)
    local res = {sum=params.num1 - params.num2}
    local s = self:jencode(res)
    local heads = {["Content-Type"] = "application/json"}
    local headStr = self:packHeaders(heads, #s)
    http_out(conn, 200, headStr, s.."\n")
end

function CurlApi:call(conn, tParam)
    self._urlCb[tParam.uri](conn, tParam)
end

function CurlApi:setup()
    self._frame:register("/api/sum", self)
    self._frame:register("/api/sub", self)
end

return CurlApi